name: Deploy to Heroku

on: 
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - main

jobs:
  Deploy:
      if: ${{ github.event_name == 'push' && github.ref == 'refs/head/main' }}
      # needs: Test
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@master
        - name: Deploy to Heroku
          uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
          with:
            heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
            heroku_app_name: "ondesk" #Must be unique in Heroku
            heroku_email: "xengawe@gmail.com"

#test below should go before deploy

  # Test:
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: posgres:12
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: password
  #       ports: ['5432:5432']
    
  #   steps:
  #     - uses: actions/checkout@master

  #     - name: Setup Ruby 2.7
  #       uses: ruby/setup-ruby@v1
  #       with: 
  #         ruby-version: 2.7
      
  #     - name: Setup Node 14
  #       uses: actions/setup-node@v1
  #       with: 
  #         ruby-version: 14.x

  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name-dir::$(yarn cache dir)"

  #     - name: Cache yarn
  #       uses: actions/cache@v1
  #       with: 
  #         path: ${{ steps.yarn-cache.outputs.dir }}  
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-

  #     - name: Cache gems
  #       uses: actions/cache@v1
  #       with: 
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/Gemfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gem-

  #     - name: Install dependencies
  #       run: |
  #         gem install bundler
  #         bundle config path vendor/bundle
  #         bundle install --jobs 4 --retry 3
  #         yarn install --frozen-lockfile

  #     - name: Run tests
  #       env: 
  #         DATABASE_URL: postgres://postgres:password@localhost:5432/test
  #         REDIS_URL: redis://localhost:6379/0
  #         RAILS_ENV: test
  #         RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  #         PG_USER: postgres
  #       run: 
  #         bin/rails db:test:prepare
  #         bin/rails test

  
